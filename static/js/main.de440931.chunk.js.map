{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image2.jpg"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","lineChart","labels","datasets","label","borderColor","backgroundColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","variant","start","end","duration","separator","color","Date","toLocaleString","App","state","setState","this","header","image","src","image2","alt","CountryPicker","main","Cards","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,qKCC7JC,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAEhBE,IACFE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAQgDG,IAAMC,IAAIF,GAR1D,2BAQbG,KAAQC,EARK,EAQLA,UAAWC,EARN,EAQMA,UAAWC,EARjB,EAQiBA,OAAQC,EARzB,EAQyBA,WARzB,kBAUd,CAAEH,YAAWC,YAAWC,SAAQC,eAVlB,2HAAH,sDAgBTC,EAAc,uCAAG,8BAAAT,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAElBO,EAFkB,EAElBA,KAFkB,kBAInBA,EAAKM,KAAI,gBAAGL,EAAH,EAAGA,UAAWE,EAAd,EAAcA,OAAQD,EAAtB,EAAsBA,UAAuBK,EAA7C,EAAiCC,WAAjC,MAAyD,CAAEP,UAAWA,EAAUQ,MAAON,OAAQA,EAAOM,MAAOP,UAAWA,EAAUO,MAAOF,YAJ/H,wHAAH,qDAUdG,EAAc,uCAAG,8BAAAd,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAEVkB,EAFU,EAElBX,KAAQW,UAFU,kBAInBA,EAAUL,KAAI,SAACX,GAAD,OAAaA,EAAQiB,SAJhB,wHAAH,qD,iBC6BZC,EApDD,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACXC,EADW,KACAC,EADA,KAGlBC,qBAAU,YACQ,uCAAG,4BAAArB,EAAA,sEACcS,IADd,OACXa,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJL,EAAU,GACR,kBAAC,IAAD,CACEf,KAAM,CACJqB,OAAQN,EAAUT,KAAI,qBAAGC,QACzBe,SAAU,CAAC,CACTtB,KAAMe,EAAUT,KAAI,SAACN,GAAD,OAAUA,EAAKC,aACnCsB,MAAO,cACPC,YAAa,SACbC,gBAAiB,yBACjBC,MAAM,GAER,CACE1B,KAAMe,EAAUT,KAAI,SAACN,GAAD,OAAUA,EAAKE,aACnCqB,MAAO,YACPC,YAAa,QACbC,gBAAiB,uBACjBC,MAAM,GAER,CACE1B,KAAMe,EAAUT,KAAI,SAACN,GAAD,OAAUA,EAAKG,UACnCoB,MAAO,QACPC,YAAa,MACbC,gBAAiB,uBACjBC,MAAM,OAKV,KAGN,OACE,yBAAKC,UAAWC,IAAOC,WACpBT,I,mCC1BQU,EArBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACXjB,mBAAS,IADE,mBACtCH,EADsC,KAC3BqB,EAD2B,KAW7C,OARAf,qBAAU,YACM,uCAAG,sBAAArB,EAAA,kEACfoC,EADe,SACItB,IADJ,6EAAH,qDAIduB,KACC,IAGD,kBAACC,EAAA,EAAD,CAAaP,UAAWC,IAAOO,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOC,SAC1E,4BAAQA,MAAM,IAAd,SACC9B,EAAUL,KAAI,SAACX,EAAS+C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGD,MAAO9C,GAAUA,S,uFCoCzDiD,EAnDF,SAAC,GAA4D,IAAD,IAAzD5C,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WACpD,OAAKH,EAKH,yBAAK0B,UAAWC,IAAOC,WACrB,kBAACgB,EAAA,EAAD,CAAMhB,WAAS,EAACiB,QAAS,EAAGC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMzB,UAAW0B,IAAGzB,IAAO0B,KAAM1B,IAAO2B,WAC3E,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQP,UAAU,KAAtC,wDAGE,kBAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAU,MACjC,kBAAC,IAAD,CAASQ,MAAO,EAAGC,IAAK3D,EAAUwC,MAAOoB,SAAU,KAAMC,UAAU,OAErE,kBAACL,EAAA,EAAD,CAAYM,MAAM,iBAAlB,MACM,IAAIC,KAAK5D,GAAY6D,oBAI/B,kBAACpB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMzB,UAAW0B,IAAGzB,IAAO0B,KAAM1B,IAAO1B,YAC3E,kBAACsD,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQP,UAAU,KAAtC,yCAGE,kBAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAU,MACjC,kBAAC,IAAD,CAASQ,MAAO,EAAGC,IAAK1D,EAAUuC,MAAOoB,SAAU,KAAMC,UAAU,OAErE,kBAACL,EAAA,EAAD,CAAYM,MAAM,iBAAlB,MACM,IAAIC,KAAK5D,GAAY6D,oBAI/B,kBAACpB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMzB,UAAW0B,IAAGzB,IAAO0B,KAAM1B,IAAOzB,SAC3E,kBAACqD,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQP,UAAU,KAAtC,iCAGE,kBAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAU,MACjC,kBAAC,IAAD,CAASQ,MAAO,EAAGC,IAAKzD,EAAOsC,MAAOoB,SAAU,KAAMC,UAAU,OAElE,kBAACL,EAAA,EAAD,CAAYM,MAAM,iBAAlB,MACQ,IAAIC,KAAK5D,GAAY6D,sBAzC9B,0B,kCCkCIC,E,4MAnCbC,MAAQ,CACNnE,KAAM,GACNL,QAAS,I,EASXoC,oB,uCAAsB,WAAOpC,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdK,EADc,OAGpB,EAAKoE,SAAS,CAAEpE,OAAML,QAASA,IAHX,2C,wPALDD,I,OAAbM,E,OAENqE,KAAKD,SAAS,CAAEpE,S,qIASR,IAAD,EACmBqE,KAAKF,MAAvBnE,EADD,EACCA,KAAML,EADP,EACOA,QAEd,OACE,yBAAKgC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAO0C,QACrB,yBAAK3C,UAAWC,IAAO2C,MAAOC,IAAKC,IAAQC,IAAI,aAC/C,kBAACC,EAAD,CAAe5C,oBAAqBsC,KAAKtC,uBAE3C,yBAAKJ,UAAWC,IAAOgD,MACrB,kBAACC,EAAD,CAAO7E,KAAMA,IACb,kBAAC,EAAD,CAAOA,KAAMA,EAAML,QAASA,U,GA7BpBmF,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjD5F,EAAOC,QAAU,CAAC,UAAY,uBAAuB,OAAS,oBAAoB,KAAO,kBAAkB,OAAS,oBAAoB,MAAQ,qB,mBCAhJD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.de440931.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, recovered, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, recovered: recovered.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infectés',\n            borderColor: 'yellow',\n            backgroundColor: 'rgba(238, 255, 0, 0.5)',\n            fill: true,\n          }, \n          {\n            data: dailyData.map((data) => data.recovered),\n            label: 'Guéris',\n            borderColor: 'green',\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\n            fill: true,\n          },\n          {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Morts',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Monde</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Chargement en cours...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n          <Typography variant=\"body2\" component=\"p\">\n              Nombres de cas actifs d'infectés par le COVID-19.\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Au {new Date(lastUpdate).toLocaleString()}\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n          <Typography variant=\"body2\" component=\"p\">\n              Nombres de cas guéris du COVID-19.\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              Au {new Date(lastUpdate).toLocaleString()}\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n          <Typography variant=\"body2\" component=\"p\">\n              Nombres de morts du COVID-19.\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n                Au {new Date(lastUpdate).toLocaleString()}\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\nimport image2 from './images/image2.jpg'\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <img className={styles.image} src={image2} alt=\"COVID-19\" />\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n        </div>\n        <div className={styles.main}>\n          <Cards data={data} />\n          <Chart data={data} country={country} />\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"header\":\"App_header__3ZZ1n\",\"main\":\"App_main__3ZkGI\",\"poster\":\"App_poster__2gmdg\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image2.c46a5c14.jpg\";"],"sourceRoot":""}